memberSearchIndex = [{"p":"cli","c":"Option","l":"_default()"},{"p":"data.tree","c":"Tree","l":"add(Edge)","url":"add(data.tree.Edge)"},{"p":"cli","c":"Command","l":"ALGORITHM"},{"p":"command.algorithm","c":"Algorithm","l":"Algorithm()","url":"%3Cinit%3E()"},{"p":"exception","c":"ArgumentException","l":"ArgumentException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"cli","c":"Arguments","l":"Arguments()","url":"%3Cinit%3E()"},{"p":"data.matrix","c":"Asymmetric","l":"Asymmetric()","url":"%3Cinit%3E()"},{"p":"command.algorithm.gcp","c":"CL","l":"CL()","url":"%3Cinit%3E()"},{"p":"command","c":"ICommand","l":"COMMAND"},{"p":"data","c":"Context","l":"Context()","url":"%3Cinit%3E()"},{"p":"command.correction","c":"Correction","l":"correct(double)"},{"p":"command.correction","c":"JukesCantor","l":"correct(double)"},{"p":"data.matrix","c":"Matrix","l":"correct(Matrix.ICorrection)","url":"correct(data.matrix.Matrix.ICorrection)"},{"p":"cli","c":"Command","l":"CORRECTION"},{"p":"command.correction","c":"Correction","l":"Correction()","url":"%3Cinit%3E()"},{"p":"cli","c":"Data","l":"DATASET"},{"p":"cli","c":"Option","l":"DATASET"},{"p":"data.dataset","c":"Dataset","l":"Dataset(List<Profile>)","url":"%3Cinit%3E(java.util.List)"},{"p":"data.dataset","c":"DatasetProcessor","l":"DatasetProcessor()","url":"%3Cinit%3E()"},{"p":"command.algorithm.gcp","c":"CL","l":"dissimilarity(double, double, double, int, int)","url":"dissimilarity(double,double,double,int,int)"},{"p":"command.algorithm.gcp","c":"GloballyClosestPairs","l":"dissimilarity(double, double, double, int, int)","url":"dissimilarity(double,double,double,int,int)"},{"p":"command.algorithm.gcp","c":"SL","l":"dissimilarity(double, double, double, int, int)","url":"dissimilarity(double,double,double,int,int)"},{"p":"command.algorithm.gcp","c":"UPGMA","l":"dissimilarity(double, double, double, int, int)","url":"dissimilarity(double,double,double,int,int)"},{"p":"command.algorithm.gcp","c":"UPGMC","l":"dissimilarity(double, double, double, int, int)","url":"dissimilarity(double,double,double,int,int)"},{"p":"command.algorithm.gcp","c":"WPGMA","l":"dissimilarity(double, double, double, int, int)","url":"dissimilarity(double,double,double,int,int)"},{"p":"command.algorithm.gcp","c":"WPGMC","l":"dissimilarity(double, double, double, int, int)","url":"dissimilarity(double,double,double,int,int)"},{"p":"cli","c":"Command","l":"DISTANCE"},{"p":"cli","c":"Format","l":"DISTANCE"},{"p":"data.tree","c":"Edge","l":"distance()"},{"p":"command.distance","c":"Distance","l":"Distance()","url":"%3Cinit%3E()"},{"p":"data.matrix","c":"Matrix","l":"distance(int, int)","url":"distance(int,int)"},{"p":"command.distance","c":"Distance","l":"distance(Profile, Profile)","url":"distance(data.dataset.Profile,data.dataset.Profile)"},{"p":"command.distance","c":"GrapeTree","l":"distance(Profile, Profile)","url":"distance(data.dataset.Profile,data.dataset.Profile)"},{"p":"command.distance","c":"Hamming","l":"distance(Profile, Profile)","url":"distance(data.dataset.Profile,data.dataset.Profile)"},{"p":"command.distance","c":"Kimura","l":"distance(Profile, Profile)","url":"distance(data.dataset.Profile,data.dataset.Profile)"},{"p":"data.tree","c":"Edge","l":"Edge(int, int, double)","url":"%3Cinit%3E(int,int,double)"},{"p":"data.tree","c":"Tree","l":"edges()"},{"p":"command.algorithm.edmonds","c":"Edmonds","l":"Edmonds()","url":"%3Cinit%3E()"},{"p":"command.algorithm.nj","c":"NeighbourJoining.Cluster","l":"elements"},{"p":"logging","c":"Log","l":"error(String, Object...)","url":"error(java.lang.String,java.lang.Object...)"},{"p":"logging","c":"Log","l":"exception(Exception)","url":"exception(java.lang.Exception)"},{"p":"data","c":"IReader","l":"FAILED"},{"p":"data","c":"IWriter","l":"FAILED"},{"p":"data.dataset","c":"FASTA","l":"FASTA()","url":"%3Cinit%3E()"},{"p":"cli","c":"Format","l":"FILE"},{"p":"data","c":"File","l":"File(Object, Path)","url":"%3Cinit%3E(java.lang.Object,java.nio.file.Path)"},{"p":"command","c":"ICommand","l":"FINISHED"},{"p":"data","c":"IReader","l":"FINISHED"},{"p":"data","c":"IWriter","l":"FINISHED"},{"p":"cli","c":"Option","l":"format()"},{"p":"data.matrix","c":"MatrixProcessor","l":"format(Matrix)","url":"format(data.matrix.Matrix)"},{"p":"data","c":"IWriter","l":"format(T)"},{"p":"data.tree","c":"Newick","l":"format(Tree)","url":"format(data.tree.Tree)"},{"p":"data.tree","c":"Nexus","l":"format(Tree)","url":"format(data.tree.Tree)"},{"p":"data.tree","c":"Edge","l":"from()"},{"p":"reflection","c":"Types","l":"get(Class<?>)","url":"get(java.lang.Class)"},{"p":"data.matrix","c":"Matrix.ICorrection","l":"get(double)"},{"p":"data.matrix","c":"Matrix.IDistance","l":"get(int, int)","url":"get(int,int)"},{"p":"command","c":"ICommand.IGetter","l":"get(Options)","url":"get(cli.Options)"},{"p":"cli","c":"Command","l":"get(String)","url":"get(java.lang.String)"},{"p":"cli","c":"Option","l":"get(String)","url":"get(java.lang.String)"},{"p":"data","c":"File","l":"get(String, Data)","url":"get(java.lang.String,cli.Data)"},{"p":"data","c":"Context","l":"getDataset(Options)","url":"getDataset(cli.Options)"},{"p":"data","c":"Context","l":"getMatrix(Options)","url":"getMatrix(cli.Options)"},{"p":"data","c":"Context","l":"getTree(Options)","url":"getTree(cli.Options)"},{"p":"command.algorithm.gcp","c":"GloballyClosestPairs","l":"GloballyClosestPairs()","url":"%3Cinit%3E()"},{"p":"command.algorithm.goeburst","c":"GoeBURST","l":"GoeBURST()","url":"%3Cinit%3E()"},{"p":"command.distance","c":"GrapeTree","l":"GrapeTree()","url":"%3Cinit%3E()"},{"p":"command.distance","c":"Hamming","l":"Hamming()","url":"%3Cinit%3E()"},{"p":"data.dataset","c":"Profile","l":"id()"},{"p":"data.dataset","c":"Dataset","l":"ids()"},{"p":"data.matrix","c":"Matrix","l":"ids()"},{"p":"data.tree","c":"Tree","l":"ids()"},{"p":"logging","c":"Log","l":"info(String, Object...)","url":"info(java.lang.String,java.lang.Object...)"},{"p":"command","c":"ICommand","l":"init(Context, Options)","url":"init(data.Context,cli.Options)"},{"p":"command.algorithm.goeburst","c":"GoeBURST","l":"init(Context, Options)","url":"init(data.Context,cli.Options)"},{"p":"command.optimization","c":"LBR","l":"init(Context, Options)","url":"init(data.Context,cli.Options)"},{"p":"data.dataset","c":"DatasetProcessor","l":"init(Iterator<String>)","url":"init(java.util.Iterator)"},{"p":"data.dataset","c":"FASTA","l":"init(Iterator<String>)","url":"init(java.util.Iterator)"},{"p":"exception","c":"InvalidCommandException","l":"InvalidCommandException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"exception","c":"InvalidTypeException","l":"InvalidTypeException(String, String)","url":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"cli","c":"Command","l":"isRepeatable()"},{"p":"command.correction","c":"JukesCantor","l":"JukesCantor()","url":"%3Cinit%3E()"},{"p":"cli","c":"Options","l":"keys()"},{"p":"command.distance","c":"Kimura","l":"Kimura()","url":"%3Cinit%3E()"},{"p":"command.algorithm.nj","c":"NeighbourJoining","l":"lambda(NeighbourJoining.Cluster, NeighbourJoining.Cluster)","url":"lambda(command.algorithm.nj.NeighbourJoining.Cluster,command.algorithm.nj.NeighbourJoining.Cluster)"},{"p":"command.algorithm.nj","c":"SaitouNei","l":"lambda(NeighbourJoining.Cluster, NeighbourJoining.Cluster)","url":"lambda(command.algorithm.nj.NeighbourJoining.Cluster,command.algorithm.nj.NeighbourJoining.Cluster)"},{"p":"command.algorithm.nj","c":"StudierKeppler","l":"lambda(NeighbourJoining.Cluster, NeighbourJoining.Cluster)","url":"lambda(command.algorithm.nj.NeighbourJoining.Cluster,command.algorithm.nj.NeighbourJoining.Cluster)"},{"p":"command.algorithm.nj","c":"UNJ","l":"lambda(NeighbourJoining.Cluster, NeighbourJoining.Cluster)","url":"lambda(command.algorithm.nj.NeighbourJoining.Cluster,command.algorithm.nj.NeighbourJoining.Cluster)"},{"p":"command.optimization","c":"LBR","l":"LBR()","url":"%3Cinit%3E()"},{"p":"command.algorithm.nj","c":"NeighbourJoining","l":"length(double)"},{"p":"command.algorithm.nj","c":"SaitouNei","l":"length(double)"},{"p":"command.algorithm.nj","c":"StudierKeppler","l":"length(double)"},{"p":"command.algorithm.nj","c":"UNJ","l":"length(double)"},{"p":"data.dataset","c":"Profile","l":"locus(int)"},{"p":"logging","c":"Log","l":"Log()","url":"%3Cinit%3E()"},{"p":"cli","c":"Option","l":"LVS"},{"p":"<Unnamed>","c":"Main","l":"Main()","url":"%3Cinit%3E()"},{"p":"<Unnamed>","c":"Main","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"cli","c":"Format","l":"matches(String)","url":"matches(java.lang.String)"},{"p":"cli","c":"Data","l":"MATRIX"},{"p":"cli","c":"Option","l":"MATRIX"},{"p":"data.matrix","c":"Matrix","l":"Matrix(boolean, String[], Double[][])","url":"%3Cinit%3E(boolean,java.lang.String[],java.lang.Double[][])"},{"p":"data.matrix","c":"Matrix","l":"Matrix(boolean, String[], Matrix.IDistance)","url":"%3Cinit%3E(boolean,java.lang.String[],data.matrix.Matrix.IDistance)"},{"p":"data.matrix","c":"MatrixProcessor","l":"MatrixProcessor(boolean)","url":"%3Cinit%3E(boolean)"},{"p":"exception","c":"MissingInputException","l":"MissingInputException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"exception","c":"MissingTypeException","l":"MissingTypeException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"data.dataset","c":"ML","l":"ML()","url":"%3Cinit%3E()"},{"p":"cli","c":"Format","l":"NATURAL"},{"p":"command.algorithm.nj","c":"NeighbourJoining","l":"NeighbourJoining()","url":"%3Cinit%3E()"},{"p":"data.tree","c":"Newick","l":"Newick()","url":"%3Cinit%3E()"},{"p":"data.tree","c":"Nexus","l":"Nexus()","url":"%3Cinit%3E()"},{"p":"exception","c":"NoCommandException","l":"NoCommandException()","url":"%3Cinit%3E()"},{"p":"cli","c":"Command","l":"OPTIMIZATION"},{"p":"command.optimization","c":"Optimization","l":"Optimization()","url":"%3Cinit%3E()"},{"p":"cli","c":"Data","l":"option()"},{"p":"cli","c":"Parameters","l":"options()"},{"p":"cli","c":"Options","l":"Options()","url":"%3Cinit%3E()"},{"p":"cli","c":"Option","l":"OUT"},{"p":"cli","c":"Parameters","l":"Parameters(Constructor<?>, Options)","url":"%3Cinit%3E(java.lang.reflect.Constructor,cli.Options)"},{"p":"data.dataset","c":"DatasetProcessor","l":"parse(Iterator<String>)","url":"parse(java.util.Iterator)"},{"p":"data.dataset","c":"FASTA","l":"parse(Iterator<String>)","url":"parse(java.util.Iterator)"},{"p":"data.dataset","c":"ML","l":"parse(Iterator<String>)","url":"parse(java.util.Iterator)"},{"p":"data.dataset","c":"SNP","l":"parse(Iterator<String>)","url":"parse(java.util.Iterator)"},{"p":"data","c":"IReader","l":"parse(Stream<String>)","url":"parse(java.util.stream.Stream)"},{"p":"data.dataset","c":"DatasetProcessor","l":"parse(Stream<String>)","url":"parse(java.util.stream.Stream)"},{"p":"data.matrix","c":"MatrixProcessor","l":"parse(Stream<String>)","url":"parse(java.util.stream.Stream)"},{"p":"data.tree","c":"Newick","l":"parse(Stream<String>)","url":"parse(java.util.stream.Stream)"},{"p":"data.tree","c":"Nexus","l":"parse(Stream<String>)","url":"parse(java.util.stream.Stream)"},{"p":"cli","c":"Arguments","l":"parse(String[])","url":"parse(java.lang.String[])"},{"p":"data","c":"File","l":"path()"},{"p":"command.distance","c":"Distance","l":"process(Dataset)","url":"process(data.dataset.Dataset)"},{"p":"command.algorithm.edmonds","c":"Edmonds","l":"process(Matrix)","url":"process(data.matrix.Matrix)"},{"p":"command.algorithm.gcp","c":"GloballyClosestPairs","l":"process(Matrix)","url":"process(data.matrix.Matrix)"},{"p":"command.algorithm.goeburst","c":"GoeBURST","l":"process(Matrix)","url":"process(data.matrix.Matrix)"},{"p":"command.algorithm.nj","c":"NeighbourJoining","l":"process(Matrix)","url":"process(data.matrix.Matrix)"},{"p":"command.correction","c":"Correction","l":"process(Matrix)","url":"process(data.matrix.Matrix)"},{"p":"command","c":"ICommand","l":"process(T)"},{"p":"command.optimization","c":"LBR","l":"process(Tree)","url":"process(data.tree.Tree)"},{"p":"data","c":"File","l":"processor()"},{"p":"data.dataset","c":"Dataset","l":"profile(int)"},{"p":"data.dataset","c":"Profile","l":"Profile(String, Stream<String>)","url":"%3Cinit%3E(java.lang.String,java.util.stream.Stream)"},{"p":"data.dataset","c":"Profile","l":"Profile(String, String)","url":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"cli","c":"Options","l":"put(String)","url":"put(java.lang.String)"},{"p":"data","c":"IReader","l":"READ"},{"p":"data","c":"IReader","l":"read(Options, T, Data)","url":"read(cli.Options,T,cli.Data)"},{"p":"data.tree","c":"Tree","l":"remove(Edge)","url":"remove(data.tree.Edge)"},{"p":"cli","c":"Options","l":"remove(Option)","url":"remove(cli.Option)"},{"p":"exception","c":"RepeatedCommandException","l":"RepeatedCommandException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"command","c":"ICommand","l":"run(Arguments, Context, Command, ICommand.IGetter<T>, BiConsumer<Options, R>)","url":"run(cli.Arguments,data.Context,cli.Command,command.ICommand.IGetter,java.util.function.BiConsumer)"},{"p":"command.algorithm.nj","c":"SaitouNei","l":"SaitouNei()","url":"%3Cinit%3E()"},{"p":"data","c":"Context","l":"setMatrix(Options, Matrix)","url":"setMatrix(cli.Options,data.matrix.Matrix)"},{"p":"data","c":"Context","l":"setTree(Options, Tree)","url":"setTree(cli.Options,data.tree.Tree)"},{"p":"data.dataset","c":"Dataset","l":"size()"},{"p":"data.dataset","c":"Profile","l":"size()"},{"p":"data.matrix","c":"Matrix","l":"size()"},{"p":"command.algorithm.gcp","c":"SL","l":"SL()","url":"%3Cinit%3E()"},{"p":"data.dataset","c":"SNP","l":"SNP()","url":"%3Cinit%3E()"},{"p":"command","c":"ICommand","l":"STARTED"},{"p":"data","c":"IReader","l":"STARTED"},{"p":"data","c":"IWriter","l":"STARTED"},{"p":"command.algorithm.nj","c":"StudierKeppler","l":"StudierKeppler()","url":"%3Cinit%3E()"},{"p":"command.distance","c":"Distance","l":"symmetric()"},{"p":"command.distance","c":"GrapeTree","l":"symmetric()"},{"p":"command.distance","c":"Hamming","l":"symmetric()"},{"p":"command.distance","c":"Kimura","l":"symmetric()"},{"p":"data.matrix","c":"Symmetric","l":"Symmetric()","url":"%3Cinit%3E()"},{"p":"data.tree","c":"Edge","l":"to()"},{"p":"cli","c":"Command","l":"toString()"},{"p":"cli","c":"Data","l":"toString()"},{"p":"cli","c":"Option","l":"toString()"},{"p":"cli","c":"Data","l":"TREE"},{"p":"cli","c":"Option","l":"TREE"},{"p":"data.tree","c":"Tree","l":"Tree(String[])","url":"%3Cinit%3E(java.lang.String[])"},{"p":"data.tree","c":"Tree","l":"Tree(String[], List<Edge>)","url":"%3Cinit%3E(java.lang.String[],java.util.List)"},{"p":"data.tree","c":"TreeProcessor","l":"TreeProcessor()","url":"%3Cinit%3E()"},{"p":"cli","c":"Parameters","l":"type()"},{"p":"cli","c":"Command","l":"type(String)","url":"type(java.lang.String)"},{"p":"cli","c":"Data","l":"type(String)","url":"type(java.lang.String)"},{"p":"reflection","c":"Types","l":"Types()","url":"%3Cinit%3E()"},{"p":"command.algorithm.nj","c":"UNJ","l":"UNJ()","url":"%3Cinit%3E()"},{"p":"command","c":"ICommand","l":"UNUSED"},{"p":"command.algorithm.gcp","c":"UPGMA","l":"UPGMA()","url":"%3Cinit%3E()"},{"p":"command.algorithm.gcp","c":"UPGMC","l":"UPGMC()","url":"%3Cinit%3E()"},{"p":"cli","c":"Command","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"cli","c":"Data","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"cli","c":"Format","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"cli","c":"Option","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"cli","c":"Command","l":"values()"},{"p":"cli","c":"Data","l":"values()"},{"p":"cli","c":"Format","l":"values()"},{"p":"cli","c":"Option","l":"values()"},{"p":"logging","c":"Log","l":"warning(String, Object...)","url":"warning(java.lang.String,java.lang.Object...)"},{"p":"command.algorithm.nj","c":"NeighbourJoining","l":"weight(NeighbourJoining.Cluster)","url":"weight(command.algorithm.nj.NeighbourJoining.Cluster)"},{"p":"command.algorithm.nj","c":"SaitouNei","l":"weight(NeighbourJoining.Cluster)","url":"weight(command.algorithm.nj.NeighbourJoining.Cluster)"},{"p":"command.algorithm.nj","c":"StudierKeppler","l":"weight(NeighbourJoining.Cluster)","url":"weight(command.algorithm.nj.NeighbourJoining.Cluster)"},{"p":"command.algorithm.nj","c":"UNJ","l":"weight(NeighbourJoining.Cluster)","url":"weight(command.algorithm.nj.NeighbourJoining.Cluster)"},{"p":"command.algorithm.gcp","c":"WPGMA","l":"WPGMA()","url":"%3Cinit%3E()"},{"p":"command.algorithm.gcp","c":"WPGMC","l":"WPGMC()","url":"%3Cinit%3E()"},{"p":"data","c":"IWriter","l":"WRITE"},{"p":"data","c":"IWriter","l":"write(Options, T, Data)","url":"write(cli.Options,T,cli.Data)"}]